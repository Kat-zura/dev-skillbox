==============================
📦 Python 基础语法与数据结构
==============================

🔹 不可变对象：int, str, tuple
🔸 可变对象：list, dict, set

🔹 列表 list：[]
🔹 元组 tuple：()
🔹 字典 dict：{key: value}（key 必须是不可变对象）
🔹 集合 set：{} 或 set()

==============================
🧮 函数参数类型与定义方式
==============================

- 必选参数
- 默认参数（必须放在后面，且指向不可变对象）
- 可变参数 *args（接收 tuple）
- 关键字参数 **kw（接收 dict）
- 命名关键字参数（在 * 后定义，必须使用关键字传入）

==============================
🔧 内置函数与常用操作
==============================

abs(x)               # 绝对值
hex(x)               # 十六进制
isinstance(x, T)     # 类型判断
sorted(list, key=..., reverse=True/False)  # 排序

map(func, iterable)      # 映射
filter(func, iterable)   # 过滤
reduce(func, iterable)   # 归约（需导入 functools）

==============================
✂️ 切片操作（适用于 list, tuple, str）
==============================

[start:end:step]

==============================
🔁 迭代与枚举
==============================

for i, element in enumerate(list):
for k, v in dict.items():

==============================
🧪 列表生成式
==============================

[x * x for x in range(10)]
[x if condition else y for x in iterable]
[x for x in iterable if condition]

==============================
⚙️ 生成器与 yield
==============================

g = (x * x for x in range(10))
for i in g:
    print(i)

def gen():
    yield x  # 暂停并返回值

==============================
🔒 闭包与作用域
==============================

def outer():
    x = 0
    def inner():
        nonlocal x
        x += 1
        return x
    return inner

==============================
🧙 匿名函数 lambda
==============================

lambda x: x * x

==============================
🎀 装饰器 decorator
==============================

def decorator(func):
    def wrapper(*args, **kw):
        return func(*args, **kw)
    return wrapper

@decorator
def my_func():
    ...

==============================
🧩 偏函数 functools.partial
==============================

from functools import partial

int2 = partial(int, base=2)
int2('10010')  # 相当于 int('10010', base=2)

max2 = partial(max, 10)
max2(5, 6)     # 相当于 max(10, 5, 6)

==============================
🧠 模式匹配（Python 3.10+）
==============================

match value:
    case 1:
        ...
    case [x, y]:
        ...
    case {"key": val}:
        ...

==============================
✅ 备注
==============================

- 默认参数必须指向不可变对象
- 可变参数在前，默认参数在后
- 字典的 key 必须是不可变对象
